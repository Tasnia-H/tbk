generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String?  // Make password optional for OAuth users
  googleId  String?  @unique // Add Google ID for OAuth
  avatar    String?  // Add avatar URL from Google
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sentMessages     Message[] @relation("MessageSender")
  receivedMessages Message[] @relation("MessageReceiver")
  initiatedCalls   Call[]    @relation("CallInitiator")
  receivedCalls    Call[]    @relation("CallReceiver")

  @@map("users")
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  isRead    Boolean  @default(false)
  
  // File-related fields
  type      String   @default("text") // "text" or "file"
  fileName  String?  // Original file name
  fileSize  Int?     // File size in bytes
  fileType  String?  // MIME type
  fileUrl   String?  // URL/path for stored files (fallback)
  
  senderId   String
  receiverId String

  sender   User @relation("MessageSender", fields: [senderId], references: [id])
  receiver User @relation("MessageReceiver", fields: [receiverId], references: [id])

  @@map("messages")
}

model Call {
  id        String   @id @default(cuid())
  type      String   // "audio", "video", or "screen"
  status    String   // "initiated", "accepted", "rejected", "ended", "missed"
  duration  Int?     // Duration in seconds
  createdAt DateTime @default(now())
  endedAt   DateTime?

  callerId   String
  receiverId String

  caller   User @relation("CallInitiator", fields: [callerId], references: [id])
  receiver User @relation("CallReceiver", fields: [receiverId], references: [id])

  @@map("calls")
}